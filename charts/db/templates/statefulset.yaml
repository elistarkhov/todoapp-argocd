apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-sts
spec:
  replicas: {{ .Values.db.replicaCount }}
  serviceName: {{ .Release.Name }}-svc
  selector:
    matchLabels:
      project: {{ .Release.Name }}
  template:
    metadata:
      labels:
        project: {{ .Release.Name }}
    spec:
      containers:
        - name: postgres
          image: {{ .Values.db.image }}
          ports:
            - containerPort: 5432
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -w -d "postgres" -h 127.0.0.1 -c "SELECT 1"'
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -w -d "postgres" -h 127.0.0.1 -c "SELECT 1"'
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          resources:
            requests:
              memory: 512Mi
            limits:
              memory: 1Gi
          env:
            - name: POSTGRES_USER
              valueFrom: 
                  secretKeyRef:
                    name: todo-secret
                    key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: todo-secret
                  key: db-pass
            - name: POSTGRES_DB
              value: {{ .Values.db.name }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi